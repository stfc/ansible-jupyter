# Copy this file to config.yaml and fill everything <TO_FILL>
proxy:
  https:
    enabled: true
    hosts:
      - <Host Domain>
    letsencrypt:
      # Uncomment acmeserver for a test certificate
      # acmeServer: "https://acme-staging-v02.api.letsencrypt.org/directory"
      # This email gets warnings if auto-renewal fails
      contactEmail: <Not Set>
  # This can be generated with `openssl rand -hex 32`
  secretToken: <Not Set>
  service:
    loadBalancerIP: <IP Address>

singleuser:
  # Use new UI by default as the old UI is being deprecated
  defaultUrl: "/lab"
  extraEnv:
    JUPYTERHUB_ACTIVITY_INTERVAL: "3600"
  events: true

  storage:
    # Required for PyTorch
    extraVolumes:
      - name: shm-volume
        emptyDir:
          medium: Memory
      - name: training-materials
        persistentVolumeClaim:
          claimName: training-materials
    extraVolumeMounts:
      - name: shm-volume
        mountPath: /dev/shm
      - name: training-materials
        mountPath: /mnt/materials

    type: dynamic
    capacity: 10Gi
    dynamic:
      storageClass: longhorn

  # Default profile, this is what the placeholders will use
  startTimeout: 1200 # seconds == 20 minutes
  cpu:
    limit: 2
    guarantee: 0.05
  memory:
    limit: 1.8G
    guarantee: 1.8G

  profileList:
    - display_name: "Default: Minimal environment"
      description: |
        For small jobs and prototyping: 2 CPUs, 1.5GB RAM and no GPU. This is the default, and will usually start in ~2 minutes. During periods of high-contention it may take up to 20 minutes to create.
      kubespawner_override:
        image: jupyter/minimal-notebook
      default: true
    - display_name: "Datascience environment"
      kubespawner_override:
        image: jupyter/datascience-notebook
      description: |
        For small jobs and prototyping: 2 CPUs, 1.5GB RAM and no GPU.
      default: false

hub:
  #remove login for metrics collection
  authenticatePrometheus: false
  config:
    Authenticator:
      # Whilst auto-login would be nice it dumps users at IRIS IAM with no warning
      # this gets users into the habit of blindly accepting sign-in without seeing the service
      auto_login: false
    GenericOAuthenticator:
      login_service: "IRIS IAM" # Name for the shiny button
      client_id: <TO_FILL>
      client_secret: <TO_FILL>
      # registration_token: <TO_FILL>
      oauth_callback_url: "https://{{ JUPYTER_DOMAIN_NAME }}/hub/oauth_callback"
      authorize_url: https://iris-iam.stfc.ac.uk/authorize
      token_url: https://iris-iam.stfc.ac.uk/token
      userdata_url: https://iris-iam.stfc.ac.uk/userinfo
      scope:
        - openid
        - preferred_username
        - profile
        - email
      username_claim: preferred_username
      userdata_params:
        state: state
      claim_groups_key: groups
      allowed_groups:
        - stfc-cloud
      admin_groups:
        - stfc-cloud
    JupyterHub:
      authenticator_class: generic-oauth

scheduling:
  # Try to pack users tightly rather than spinning up one node per user
  userScheduler:
    enabled: false
  # Enable us to evict a placeholder rather than spin up a whole new node
  podPriority:
    enabled: true
    defaultPriority: 0
    userPlaceholderPriority: -10 # -10 is equal to scale up criteria
  # Prep some environments beforehand so users don't have to wait
  userPlaceholder:
    enabled: true
    replicas: 4 # Number of placeholders, this should eq high mem / default mem

cull:
  enabled: true
  timeout: 86400 # seconds == 1 day
  every: 300 # 5 minutes
